import React from "react";
import Home from "./home/Home";
import { Navigate, Route, Routes } from "react-router-dom";
import Courses from "./courses/Courses";
import Signup from "./components/Signup";
import { Toaster } from "react-hot-toast";
import { useAuth } from "./context/AuthProvider";
import Freebook from "./components/Freebook";
import About from "./components/About";
import Dashboard from "./components/Dashboard";
import CourseDetails from "./components/CourseDetails";
import FreeCourceDetails from "./components/FreeCourceDetails";

function App() {
  const [authUser, setAuthUser] = useAuth();
  console.log(authUser);

  const courses = [
    {
      id: 1,
      title: "React JS",
      description: <p><h2><strong>🚀 React JS Crash Course</strong></h2><br /><h3><strong>Master React JS Quickly & Efficiently!</strong></h3><br /><p>This <strong>React JS Crash Course</strong> is perfect for beginners and developers who want to learn React from scratch and build modern web applications. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to React</strong> – Why React? Key features and advantages<br /><br /><strong>✅ Setting Up React Environment</strong> – Installing Node.js, Create React App, and project structure<br /><br /><strong>✅ JSX & Components</strong> – Understanding functional & class components<br /><br /><strong>✅ Props & State Management</strong> – Passing data and handling UI changes<br /><br /><strong>✅ React Hooks</strong> – useState, useEffect, useRef, and custom hooks<br /><br /><strong>✅ Event Handling & Forms</strong> – User interactions and controlled components<br /><br /><strong>✅ Conditional Rendering & Lists</strong> – Displaying dynamic data effectively<br /><br /><strong>✅ React Router</strong> – Navigating between pages in a React app<br /><br /><strong>✅ Fetching Data with APIs</strong> – Working with REST APIs using Axios & Fetch<br /><br /><strong>✅ Context API & Redux (Basic Intro)</strong> – State management solutions in React<br /><br /><strong>✅ Error Handling & Debugging</strong> – Common mistakes and best practices<br /><br /><strong>✅ React Performance Optimization</strong> – Memoization, Lazy Loading & Code Splitting<br /><br /><strong>✅ Deploying React Apps</strong> – Hosting your project on Vercel, Netlify, or Firebase<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in web development<br />✔️ JavaScript developers looking to master React<br />✔️ Developers building dynamic & interactive UIs<br />✔️ Anyone wanting to quickly upskill in frontend development<br /><br /><strong>📅 Limited-Time Offer: ₹2999</strong><br /><strong>💻 Enroll Now & Start Building Awesome React Apps! 🚀</strong><br /><br/><br/></p>,
      price: "₹2999",
      image: "/react.jpg",
    },
    {
      id: 2,
      title: "Node JS",
      description: <p><h2><strong>🚀 Node.js Crash Course</strong></h2><br /><h3><strong>Master Node.js Quickly & Efficiently!</strong></h3><br /><p>This <strong>Node.js Crash Course</strong> is perfect for developers who want to learn backend development using JavaScript. With hands-on projects and real-world examples, you'll gain practical skills to build high-performance server-side applications.</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Node.js</strong> – What is Node.js? Why use it? Key features and advantages<br /><br /><strong>✅ Setting Up Node.js Environment</strong> – Installing Node.js, npm, and setting up a project<br /><br /><strong>✅ Understanding Asynchronous JavaScript</strong> – Callbacks, Promises, and Async/Await<br /><br /><strong>✅ Node.js Modules & File System</strong> – Built-in modules, fs, path, os, process management<br /><br /><strong>✅ Creating a Simple Web Server</strong> – Using the HTTP module to serve requests<br /><br /><strong>✅ Event-Driven Architecture in Node.js</strong> – Understanding the event loop, event emitters, and streams<br /><br /><strong>✅ Express.js Framework</strong> – Setting up Express.js, middleware, routing, and handling requests<br /><br /><strong>✅ Middleware & Error Handling</strong> – Creating custom middleware, error handling techniques, and logging<br /><br /><strong>✅ Working with Databases</strong> – Connecting Node.js with MongoDB, MySQL, PostgreSQL<br /><br /><strong>✅ ORM & ODM in Node.js</strong> – Using Mongoose for MongoDB, Sequelize for SQL databases<br /><br /><strong>✅ Authentication & Authorization</strong> – Implementing JWT (JSON Web Tokens), bcrypt for password hashing, OAuth authentication<br /><br /><strong>✅ RESTful APIs & CRUD Operations</strong> – Designing RESTful APIs, handling API routes, implementing CRUD operations<br /><br /><strong>✅ WebSockets & Real-time Communication</strong> – Using Socket.io for chat applications and live updates<br /><br /><strong>✅ Node.js with GraphQL</strong> – Introduction to GraphQL, setting up a GraphQL API with Node.js<br /><br /><strong>✅ Caching & Performance Optimization</strong> – Redis caching, optimizing queries, handling heavy loads<br /><br /><strong>✅ File Uploads & Processing</strong> – Using Multer for handling file uploads in Node.js applications<br /><br /><strong>✅ Background Jobs & Task Scheduling</strong> – Implementing background jobs using Node.js workers, Bull queue<br /><br /><strong>✅ Node.js with Microservices</strong> – Understanding microservices architecture, designing scalable APIs<br /><br /><strong>✅ Testing in Node.js</strong> – Unit testing with Jest, integration testing with Mocha and Chai<br /><br /><strong>✅ Securing Node.js Applications</strong> – Handling CORS, securing APIs, preventing SQL injection and XSS attacks<br /><br /><strong>✅ Deployment & Hosting</strong> – Deploying Node.js applications on Heroku, AWS, and DigitalOcean<br /><br /><strong>✅ Continuous Integration & Deployment (CI/CD)</strong> – Setting up CI/CD pipelines with GitHub Actions, Jenkins<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, performance optimization, debugging techniques, and project-based learning!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Frontend developers transitioning to backend development<br />✔️ JavaScript developers looking to master Node.js<br />✔️ Full Stack Developers wanting to build scalable applications<br />✔️ Anyone interested in learning backend development with JavaScript<br /><br /><strong>📅 Limited-Time Offer: ₹2999</strong><br /><strong>💻 Enroll Now & Start Building Powerful Backend Applications! 🚀</strong><br /><br/><br/></p>,
      price: "₹2999",
      image: "/node.jpg",
    },
    {
      id: 3,
      title: "Mastering MongoDB",
      description: <p><h2><strong>🚀 MongoDB Crash Course</strong></h2><br /><h3><strong>Master MongoDB Quickly & Efficiently!</strong></h3><br /><p>This <strong>MongoDB Crash Course</strong> is perfect for beginners and developers who want to learn MongoDB from scratch and efficiently manage databases. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to MongoDB</strong> – Why MongoDB? Key features and advantages<br /><br /><strong>✅ Setting Up MongoDB</strong> – Installing MongoDB, Compass, and setting up the environment<br /><br /><strong>✅ Understanding NoSQL & Document-Based Data</strong> – Collections, documents, and BSON<br /><br /><strong>✅ CRUD Operations</strong> – Creating, Reading, Updating, and Deleting data<br /><br /><strong>✅ Schema Design & Data Modeling</strong> – Structuring data efficiently<br /><br /><strong>✅ Indexing & Aggregation</strong> – Optimizing queries for better performance<br /><br /><strong>✅ Working with MongoDB Atlas</strong> – Cloud database setup and management<br /><br /><strong>✅ Connecting MongoDB with Node.js</strong> – Using Mongoose ORM for database interaction<br /><br /><strong>✅ Transactions & Data Consistency</strong> – ACID transactions in MongoDB<br /><br /><strong>✅ Security Best Practices</strong> – Authentication, authorization, and role-based access control<br /><br /><strong>✅ Backup & Replication</strong> – Ensuring data safety and high availability<br /><br /><strong>✅ Performance Optimization</strong> – Query tuning, indexing, and best practices<br /><br /><strong>✅ Deploying MongoDB Applications</strong> – Hosting databases on cloud services<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in database management<br />✔️ Developers looking to master NoSQL databases<br />✔️ Backend developers working with MongoDB in applications<br />✔️ Anyone wanting to quickly upskill in database management<br /><br /><strong>📅 Limited-Time Offer: ₹1999</strong><br /><strong>💻 Enroll Now & Start Building Scalable MongoDB Databases! 🚀</strong><br /><br/><br/></p>,
      price: "₹1999",
      image: "/mongo.jpg",
    },
    {
      id: 4,
      title: "Expert UI/UX Design",
      description: <p><h2><strong>🚀 UI/UX Design Crash Course</strong></h2><br /><h3><strong>Master UI/UX Design Quickly & Efficiently!</strong></h3><br /><p>This <strong>UI/UX Design Crash Course</strong> is perfect for beginners and professionals who want to learn UI/UX design from scratch and create user-friendly, visually appealing digital experiences. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to UI/UX Design</strong> – Understanding UI vs. UX, key concepts, and principles<br /><br /><strong>✅ Design Thinking & User-Centered Design</strong> – Problem-solving approach for better user experience<br /><br /><strong>✅ User Research & Personas</strong> – Conducting surveys, interviews, and building personas<br /><br /><strong>✅ Wireframing & Prototyping</strong> – Creating low-fidelity and high-fidelity wireframes<br /><br /><strong>✅ Visual Design Principles</strong> – Typography, color theory, layout, and consistency<br /><br /><strong>✅ UX Writing & Microcopy</strong> – Crafting effective content for better usability<br /><br /><strong>✅ Interaction Design & Animation</strong> – Creating smooth and engaging user interactions<br /><br /><strong>✅ Design Tools & Software</strong> – Mastering Figma, Adobe XD, and Sketch<br /><br /><strong>✅ Usability Testing & Heuristic Evaluation</strong> – Testing designs and improving user experience<br /><br /><strong>✅ Accessibility & Inclusive Design</strong> – Designing for all users, including those with disabilities<br /><br /><strong>✅ UI Components & Design Systems</strong> – Building reusable UI elements for consistency<br /><br /><strong>✅ Responsive & Adaptive Design</strong> – Designing for different screen sizes and devices<br /><br /><strong>✅ Portfolio Building & Case Studies</strong> – Showcasing your skills with real projects<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean design techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in UI/UX design<br />✔️ Graphic designers transitioning to UI/UX<br />✔️ Web designers looking to enhance user experience<br />✔️ Anyone wanting to quickly upskill in UI/UX design<br /><br /><strong>📅 Limited-Time Offer: ₹9999</strong><br /><strong>💻 Enroll Now & Start Creating Stunning UI/UX Designs! 🚀</strong><br /><br /><br /></p>,
      price: "₹9999",
      image: "/uiux.jpg",
    },
    {
      id: 5,
      title: "Python Zero to Hero",
      description: <p><h2><strong>🚀 Complete Python Crash Course</strong></h2><br /><h3><strong>Master Python from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Python Crash Course</strong> is perfect for beginners and professionals who want to learn Python from scratch and build real-world applications. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Python</strong> – Why Python? Key features and advantages<br /><br /><strong>✅ Setting Up Python Environment</strong> – Installing Python, IDEs, and virtual environments<br /><br /><strong>✅ Python Basics</strong> – Variables, data types, operators, and expressions<br /><br /><strong>✅ Control Flow & Loops</strong> – Conditional statements and loops (if-else, for, while)<br /><br /><strong>✅ Functions & Modules</strong> – Creating reusable functions and working with modules<br /><br /><strong>✅ File Handling</strong> – Reading, writing, and managing files in Python<br /><br /><strong>✅ Object-Oriented Programming (OOP)</strong> – Classes, objects, inheritance, and polymorphism<br /><br /><strong>✅ Exception Handling</strong> – Handling errors and debugging Python programs<br /><br /><strong>✅ Data Structures & Algorithms</strong> – Lists, tuples, sets, dictionaries, stacks, queues, and searching/sorting algorithms<br /><br /><strong>✅ Working with Databases</strong> – Using SQLite, MySQL, and PostgreSQL with Python<br /><br /><strong>✅ Web Scraping</strong> – Extracting data from websites using BeautifulSoup & Scrapy<br /><br /><strong>✅ GUI Development</strong> – Building graphical interfaces with Tkinter and PyQt<br /><br /><strong>✅ Data Science & Visualization</strong> – Pandas, NumPy, Matplotlib, and Seaborn<br /><br /><strong>✅ Machine Learning Basics</strong> – Introduction to AI/ML with Scikit-Learn and TensorFlow<br /><br /><strong>✅ Web Development with Flask & Django</strong> – Building dynamic websites using Flask and Django<br /><br /><strong>✅ API Development</strong> – Creating RESTful APIs with Flask and FastAPI<br /><br /><strong>✅ Automation & Scripting</strong> – Automating tasks with Python scripts<br /><br /><strong>✅ Testing & Debugging</strong> – Writing unit tests and debugging techniques<br /><br /><strong>✅ Cybersecurity & Ethical Hacking</strong> – Basics of penetration testing with Python<br /><br /><strong>✅ Python Performance Optimization</strong> – Writing efficient and optimized Python code<br /><br /><strong>✅ Deploying Python Applications</strong> – Hosting projects on cloud services like AWS, Heroku, and Firebase<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming<br />✔️ Developers looking to master Python<br />✔️ Data scientists and ML enthusiasts<br />✔️ Anyone wanting to quickly upskill in Python development<br /><br /><strong>📅 Limited-Time Offer: ₹1999</strong><br /><strong>💻 Enroll Now & Start Building Amazing Python Applications! 🚀</strong><br /><br/><br/></p>,
      price: "₹1999",
      image: "/python.jpg",
    },
    {
      id: 6,
      title: "Java Developer",
      description: <p><h2><strong>🚀 Complete Java Crash Course</strong></h2><br /><h3><strong>Master Java from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Java Crash Course</strong> is perfect for beginners and professionals who want to learn Java from scratch and build real-world applications. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Java</strong> – Why Java? Key features and advantages<br /><br /><strong>✅ Setting Up Java Environment</strong> – Installing JDK, IDEs (Eclipse, IntelliJ), and configuring Java<br /><br /><strong>✅ Java Basics</strong> – Variables, data types, operators, and expressions<br /><br /><strong>✅ Control Flow & Loops</strong> – Conditional statements (if-else, switch) and loops (for, while, do-while)<br /><br /><strong>✅ Functions & Methods</strong> – Creating reusable methods and working with parameters<br /><br /><strong>✅ Object-Oriented Programming (OOP)</strong> – Classes, objects, constructors, inheritance, polymorphism, abstraction, and encapsulation<br /><br /><strong>✅ Exception Handling</strong> – Try-catch blocks, custom exceptions, and debugging Java programs<br /><br /><strong>✅ Java Collections Framework</strong> – Lists, sets, maps, stacks, queues, and iterators<br /><br /><strong>✅ File Handling</strong> – Reading, writing, and managing files in Java<br /><br /><strong>✅ Multithreading & Concurrency</strong> – Threads, synchronization, and parallel programming<br /><br /><strong>✅ Data Structures & Algorithms</strong> – Arrays, linked lists, trees, graphs, searching, and sorting algorithms<br /><br /><strong>✅ Working with Databases</strong> – JDBC, MySQL, PostgreSQL, and Hibernate ORM<br /><br /><strong>✅ Web Development with Java</strong> – Servlet, JSP, and Spring Boot framework<br /><br /><strong>✅ REST API Development</strong> – Creating RESTful web services with Spring Boot<br /><br /><strong>✅ GUI Development</strong> – Building graphical user interfaces with Java Swing and JavaFX<br /><br /><strong>✅ Networking in Java</strong> – Sockets, HTTP requests, and client-server applications<br /><br /><strong>✅ Security & Encryption</strong> – Secure coding practices and cryptography in Java<br /><br /><strong>✅ Automation & Scripting</strong> – Automating tasks with Java<br /><br /><strong>✅ Testing & Debugging</strong> – Unit testing with JUnit and debugging techniques<br /><br /><strong>✅ Java Performance Optimization</strong> – Writing efficient and optimized Java code<br /><br /><strong>✅ Deploying Java Applications</strong> – Hosting Java applications on AWS, Heroku, and Docker<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming<br />✔️ Developers looking to master Java<br />✔️ Backend developers building scalable applications<br />✔️ Anyone wanting to quickly upskill in Java development<br /><br /><strong>📅 Limited-Time Offer: ₹2999</strong><br /><strong>💻 Enroll Now & Start Building Amazing Java Applications! 🚀</strong><br /><br /><br /></p>,
      price: "₹7999",
      image: "/java.jpg",
    },
    {
      id: 7,
      title: "Cloud Computing / AWS",
      description: <p><h2><strong>🚀 Complete Cloud Computing & AWS Crash Course</strong></h2><br /><h3><strong>Master Cloud Computing & AWS from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Cloud Computing & AWS Crash Course</strong> is perfect for beginners and professionals who want to learn cloud computing concepts and AWS services from scratch. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Cloud Computing</strong> – What is cloud computing? Benefits, models (IaaS, PaaS, SaaS), and key providers<br /><br /><strong>✅ Cloud Deployment Models</strong> – Public, private, hybrid, and multi-cloud architectures<br /><br /><strong>✅ AWS Overview</strong> – Introduction to Amazon Web Services, pricing, and global infrastructure<br /><br /><strong>✅ Setting Up AWS Account</strong> – Free-tier account setup and AWS Management Console walkthrough<br /><br /><strong>✅ AWS Compute Services</strong> – EC2 (Elastic Compute Cloud), Lambda (Serverless Computing), Elastic Beanstalk<br /><br /><strong>✅ AWS Storage Services</strong> – S3 (Simple Storage Service), EBS (Elastic Block Storage), EFS (Elastic File System), Glacier (Backup & Archiving)<br /><br /><strong>✅ AWS Database Services</strong> – RDS (Relational Database Service), DynamoDB (NoSQL), Redshift (Data Warehousing), Aurora (Cloud-native DB)<br /><br /><strong>✅ AWS Networking & Content Delivery</strong> – VPC (Virtual Private Cloud), Route 53 (DNS), CloudFront (CDN), Elastic Load Balancing (ELB)<br /><br /><strong>✅ Identity & Access Management (IAM)</strong> – Users, roles, policies, security best practices<br /><br /><strong>✅ AWS Security & Compliance</strong> – Encryption, AWS Shield, Security Groups, WAF (Web Application Firewall)<br /><br /><strong>✅ Monitoring & Logging</strong> – CloudWatch, CloudTrail, AWS Config for compliance<br /><br /><strong>✅ DevOps & Automation</strong> – AWS CLI, SDKs, CloudFormation, Terraform, CodeDeploy, CodePipeline<br /><br /><strong>✅ AWS Lambda & Serverless Computing</strong> – Function-as-a-Service (FaaS), event-driven applications<br /><br /><strong>✅ Microservices with AWS</strong> – API Gateway, ECS (Elastic Container Service), EKS (Elastic Kubernetes Service)<br /><br /><strong>✅ AWS AI & Machine Learning</strong> – SageMaker, Rekognition, Lex, Polly<br /><br /><strong>✅ AWS IoT & Edge Computing</strong> – AWS IoT Core, Greengrass, Snowball<br /><br /><strong>✅ AWS Big Data & Analytics</strong> – Athena, EMR, Kinesis, Glue<br /><br /><strong>✅ Disaster Recovery & Backup</strong> – Backup strategies, multi-region architectures<br /><br /><strong>✅ Deploying & Hosting Applications</strong> – Deploying web apps on AWS, Lightsail, Amplify<br /><br /><strong>✅ Cost Management & Optimization</strong> – AWS Pricing Calculator, Budgets, Cost Explorer<br /><br /><strong>✅ Case Studies & Real-World Use Cases</strong> – Cloud adoption by enterprises and startups<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, certification preparation (AWS Certified Cloud Practitioner, AWS Solutions Architect), and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in cloud computing<br />✔️ IT professionals looking to upskill in AWS & DevOps<br />✔️ Developers & SysAdmins deploying cloud applications<br />✔️ Anyone wanting to master AWS & cloud technologies<br /><br /><strong>📅 Limited-Time Offer: ₹4999</strong><br /><strong>💻 Enroll Now & Become a Cloud Computing Expert! 🚀</strong><br /><br /><br /></p>,
      price: "₹4999",
      image: "/aws.jpg",
    },
    {
      id: 8,
      title: "Ethical Hacking",
      description: <p><h2><strong>🚀 Complete Ethical Hacking Crash Course</strong></h2><br /><h3><strong>Master Ethical Hacking & Cybersecurity from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Ethical Hacking Crash Course</strong> is perfect for beginners and professionals who want to learn ethical hacking, penetration testing, and cybersecurity concepts from scratch. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Ethical Hacking</strong> – What is ethical hacking? Types of hackers, laws, and scope<br /><br /><strong>✅ Cybersecurity Fundamentals</strong> – Understanding threats, vulnerabilities, and risk management<br /><br /><strong>✅ Setting Up a Hacking Lab</strong> – Installing Kali Linux, VirtualBox, Metasploit, and essential tools<br /><br /><strong>✅ Linux & Networking Basics</strong> – Terminal commands, TCP/IP, subnetting, firewalls, and VPNs<br /><br /><strong>✅ Footprinting & Reconnaissance</strong> – Passive & active information gathering, OSINT tools, Whois, Shodan<br /><br /><strong>✅ Scanning & Enumeration</strong> – Network scanning, port scanning (Nmap), vulnerability assessment<br /><br /><strong>✅ System Hacking</strong> – Password cracking, brute force attacks, privilege escalation, keyloggers<br /><br /><strong>✅ Malware & Backdoors</strong> – Creating & analyzing Trojans, rootkits, and RATs<br /><br /><strong>✅ Web Application Hacking</strong> – SQL Injection, XSS, CSRF, web shells, OWASP Top 10 vulnerabilities<br /><br /><strong>✅ Wireless Network Hacking</strong> – Wi-Fi cracking, WPA/WPA2 attacks, MITM (Man-in-the-Middle) attacks<br /><br /><strong>✅ Sniffing & Spoofing</strong> – Packet sniffing with Wireshark, ARP poisoning, DNS spoofing<br /><br /><strong>✅ Social Engineering Attacks</strong> – Phishing, vishing, baiting, and human psychology in hacking<br /><br /><strong>✅ Cryptography & Encryption</strong> – Hashing, symmetric & asymmetric encryption, digital signatures<br /><br /><strong>✅ Denial of Service (DoS & DDoS) Attacks</strong> – Botnets, LOIC, HOIC, SYN flood attacks<br /><br /><strong>✅ Metasploit Framework</strong> – Exploiting vulnerabilities, post-exploitation techniques<br /><br /><strong>✅ Wireless Penetration Testing</strong> – Cracking WEP, WPA2, Evil Twin attack, Rogue AP<br /><br /><strong>✅ Web Pentesting & Bug Bounty</strong> – Finding vulnerabilities, reporting security flaws, earning rewards<br /><br /><strong>✅ Mobile Hacking</strong> – Android & iOS exploitation, mobile app security testing<br /><br /><strong>✅ Cloud Security & Hacking</strong> – AWS, Azure, Google Cloud security, cloud penetration testing<br /><br /><strong>✅ Digital Forensics & Incident Response</strong> – Investigating cyber crimes, log analysis, forensic tools<br /><br /><strong>✅ Security Best Practices</strong> – Hardening systems, zero-trust security, risk mitigation<br /><br /><strong>✅ Ethical Hacking Certifications</strong> – CEH, OSCP, CISSP, CHFI preparation<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, cybersecurity career guidance, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in ethical hacking & cybersecurity<br />✔️ IT professionals looking to upskill in penetration testing<br />✔️ Security enthusiasts wanting to understand hacking techniques<br />✔️ Anyone aspiring to become a cybersecurity expert<br /><br /><strong>📅 Limited-Time Offer: ₹7999</strong><br /><strong>💻 Enroll Now & Become an Ethical Hacking Expert! 🚀</strong><br /><br /><br /></p>,
      price: "₹7999",
      image: "/hacking.jpg",
    },
    {
      id: 9,
      title: "Oracle SQL",
      description: <p><h2><strong>🚀 Complete Oracle SQL Crash Course</strong></h2><br /><h3><strong>Master Oracle SQL from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Oracle SQL Crash Course</strong> is perfect for beginners and professionals who want to learn SQL from scratch and efficiently manage databases using Oracle SQL. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Oracle SQL</strong> – What is SQL? Basics of databases, relational model<br /><br /><strong>✅ Setting Up Oracle Database</strong> – Installing Oracle Database, SQL Developer, and environment setup<br /><br /><strong>✅ SQL Basics</strong> – SELECT statements, filtering data, sorting data<br /><br /><strong>✅ Working with Tables</strong> – Creating, modifying, and deleting tables<br /><br /><strong>✅ Data Types & Constraints</strong> – Understanding VARCHAR, NUMBER, DATE, NULL, NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY<br /><br /><strong>✅ DML (Data Manipulation Language)</strong> – INSERT, UPDATE, DELETE operations<br /><br /><strong>✅ DDL (Data Definition Language)</strong> – CREATE, ALTER, DROP, TRUNCATE<br /><br /><strong>✅ SQL Joins</strong> – INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL OUTER JOIN, SELF JOIN, CROSS JOIN<br /><br /><strong>✅ Subqueries & Nested Queries</strong> – Writing efficient subqueries for complex queries<br /><br /><strong>✅ Grouping & Aggregation</strong> – GROUP BY, HAVING, SUM, COUNT, AVG, MIN, MAX<br /><br /><strong>✅ Indexing & Performance Optimization</strong> – Creating indexes, improving query performance<br /><br /><strong>✅ Views & Materialized Views</strong> – Creating, modifying, and using views<br /><br /><strong>✅ Stored Procedures & Functions</strong> – Writing PL/SQL stored procedures and functions<br /><br /><strong>✅ Triggers & Events</strong> – Automating actions using triggers in Oracle SQL<br /><br /><strong>✅ Cursors & Transactions</strong> – Working with explicit and implicit cursors, COMMIT, ROLLBACK, SAVEPOINT<br /><br /><strong>✅ PL/SQL Basics</strong> – Understanding blocks, variables, loops, and conditional statements<br /><br /><strong>✅ Exception Handling</strong> – Handling errors and exceptions in SQL and PL/SQL<br /><br /><strong>✅ Advanced SQL Queries</strong> – Recursive queries, pivoting data, hierarchical queries<br /><br /><strong>✅ User Roles & Privileges</strong> – Managing database security with GRANT, REVOKE, and roles<br /><br /><strong>✅ Backup & Recovery</strong> – Strategies for data backup and recovery<br /><br /><strong>✅ Database Performance Tuning</strong> – Query optimization, indexing strategies, execution plans<br /><br /><strong>✅ Working with Oracle Cloud</strong> – Setting up Oracle Cloud database and managing cloud databases<br /><br /><strong>💡 Bonus:</strong> Best practices for writing efficient SQL queries, Oracle SQL interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in database management<br />✔️ Developers and analysts working with SQL and databases<br />✔️ IT professionals looking to master Oracle SQL<br />✔️ Anyone wanting to upskill in SQL and database administration<br /><br /><strong>📅 Limited-Time Offer: ₹3999</strong><br /><strong>💻 Enroll Now & Become an Oracle SQL Expert! 🚀</strong><br /><br /><br /></p>,
      price: "₹3999",
      image: "/oracle.jpg",
    },
    {
      id: 10,
      title: "DSA",
      description: <p><h2><strong>🚀 Complete DSA Using C Crash Course</strong></h2><br /><h3><strong>Master Data Structures & Algorithms with C from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>DSA Using C Crash Course</strong> is perfect for beginners and developers who want to master data structures and algorithms using the C language. With hands-on coding exercises and real-world problem-solving techniques, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Data Structures & Algorithms</strong> – Importance, complexity analysis (Big O Notation), recursion basics<br /><br /><strong>✅ Setting Up C Environment</strong> – Installing GCC, IDEs, writing & executing C programs<br /><br /><strong>✅ Arrays & Strings</strong> – 1D & 2D arrays, array operations, string handling functions<br /><br /><strong>✅ Searching Algorithms</strong> – Linear Search, Binary Search (Iterative & Recursive)<br /><br /><strong>✅ Sorting Algorithms</strong> – Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort, Heap Sort<br /><br /><strong>✅ Linked List</strong> – Singly Linked List, Doubly Linked List, Circular Linked List, Linked List operations<br /><br /><strong>✅ Stack & Queue</strong> – Stack using arrays & linked lists, Queue & Circular Queue, Priority Queue, Deque<br /><br /><strong>✅ Recursion & Backtracking</strong> – Factorial, Fibonacci, Tower of Hanoi, N-Queens Problem, Sudoku Solver<br /><br /><strong>✅ Trees</strong> – Binary Trees, Binary Search Trees (BST), Tree Traversals (Inorder, Preorder, Postorder), AVL Trees, B-Trees<br /><br /><strong>✅ Graphs</strong> – Graph Representations (Adjacency Matrix & List), BFS, DFS, Dijkstra’s Algorithm, Floyd Warshall, Kruskal’s Algorithm, Prim’s Algorithm<br /><br /><strong>✅ Hashing</strong> – Hash Tables, Collision Handling (Chaining & Open Addressing), Hash Functions<br /><br /><strong>✅ Dynamic Programming</strong> – Memoization vs. Tabulation, Knapsack Problem, Longest Common Subsequence (LCS), Longest Increasing Subsequence (LIS), Matrix Chain Multiplication<br /><br /><strong>✅ Greedy Algorithms</strong> – Huffman Coding, Activity Selection, Coin Change Problem, Kruskal’s & Prim’s Algorithm<br /><br /><strong>✅ Divide & Conquer</strong> – Merge Sort, Quick Sort, Binary Search, Strassen’s Matrix Multiplication<br /><br /><strong>✅ Bit Manipulation</strong> – Bitwise Operators, Power of Two, Count Set Bits, XOR tricks<br /><br /><strong>✅ Advanced Data Structures</strong> – Tries, Segment Trees, Fenwick Tree (Binary Indexed Tree), Disjoint Set Union (DSU)<br /><br /><strong>✅ Algorithmic Problem Solving</strong> – Competitive programming techniques, problem-solving strategies<br /><br /><strong>💡 Bonus:</strong> Industry best practices, coding interview tips, and real-world applications!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming & data structures<br />✔️ Developers looking to master DSA for competitive coding<br />✔️ Students preparing for coding interviews & placements<br />✔️ Anyone wanting to enhance problem-solving skills in C<br /><br /><strong>📅 Limited-Time Offer: ₹1999</strong><br /><strong>💻 Enroll Now & Become a DSA Expert in C! 🚀</strong><br /><br /><br /></p>,
      price: "₹1999",
      image: "/dsa.jpg",
    },
    {
      id: 11,
      title: "Spring Boot Fundamentals",
      description: <p><h2><strong>🚀 Complete Spring Boot Crash Course</strong></h2><br /><h3><strong>Master Spring Boot & Microservices from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>Spring Boot Crash Course</strong> is perfect for beginners and developers who want to learn Spring Boot from scratch and build enterprise-level applications. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Spring Boot</strong> – Why Spring Boot? Key features and advantages<br /><br /><strong>✅ Setting Up Spring Boot</strong> – Installing Java, Spring Boot CLI, Spring Initializr, and project structure<br /><br /><strong>✅ Spring Boot Basics</strong> – Annotations, Beans, Dependency Injection, Inversion of Control (IoC)<br /><br /><strong>✅ Spring Boot REST API Development</strong> – Creating RESTful APIs, @RestController, HTTP Methods, Request & Response Handling<br /><br /><strong>✅ Spring Boot with Database</strong> – Integrating MySQL, PostgreSQL, H2 Database, JPA, and Hibernate<br /><br /><strong>✅ Spring Boot with Spring Data JPA</strong> – CRUD operations, Repositories, Query Methods, Pagination & Sorting<br /><br /><strong>✅ Spring Boot Security</strong> – Authentication & Authorization, JWT (JSON Web Token), OAuth2, Role-Based Access Control<br /><br /><strong>✅ Spring Boot with Thymeleaf</strong> – Creating dynamic web pages, MVC architecture<br /><br /><strong>✅ Spring Boot with Microservices</strong> – Building microservices architecture, API Gateway, Service Discovery (Eureka)<br /><br /><strong>✅ Spring Boot with Messaging</strong> – Kafka, RabbitMQ, Event-Driven Architecture<br /><br /><strong>✅ Spring Boot Testing</strong> – Unit Testing, Integration Testing, MockMvc, JUnit, Mockito<br /><br /><strong>✅ Spring Boot Caching</strong> – Redis, In-Memory Caching, Performance Optimization<br /><br /><strong>✅ Spring Boot Logging & Monitoring</strong> – SLF4J, Logback, Actuator, Prometheus, Grafana<br /><br /><strong>✅ Spring Boot Deployment</strong> – Deploying on AWS, Docker, Kubernetes, CI/CD Pipelines<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in Java & Spring Boot<br />✔️ Java developers looking to master Spring Boot<br />✔️ Backend developers building enterprise applications<br />✔️ Anyone wanting to quickly upskill in microservices development<br /><br /><strong>📅 Limited-Time Offer: ₹3999</strong><br /><strong>💻 Enroll Now & Become a Spring Boot Expert! 🚀</strong><br /><br /><br /></p>,
      price: "₹3999",
      image: "/spring.jpg",
    },
    {
      id: 12,
      title: "Flutter Development",
      description: <p><h2><strong>🚀 Complete Flutter Development Crash Course</strong></h2><br /><h3><strong>Master Flutter & Dart to Build Cross-Platform Mobile Apps!</strong></h3><br /><p>This <strong>Flutter Development Crash Course</strong> is perfect for beginners and developers who want to learn Flutter from scratch and build beautiful, high-performance mobile applications for Android and iOS. With hands-on projects and real-world examples, you'll gain practical skills in no time!</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Flutter</strong> – Why Flutter? Key features and advantages<br /><br /><strong>✅ Setting Up Flutter Development Environment</strong> – Installing Flutter SDK, Dart, Android Studio, VS Code<br /><br /><strong>✅ Understanding Dart Programming</strong> – Syntax, Variables, Functions, Object-Oriented Programming (OOP)<br /><br /><strong>✅ Flutter Basics</strong> – Widgets, Stateless vs Stateful Widgets, Material & Cupertino Design<br /><br /><strong>✅ Building Layouts in Flutter</strong> – Row, Column, Stack, ListView, GridView, Expanded & Flexible<br /><br /><strong>✅ Navigation & Routing</strong> – Named routes, Navigator, Passing data between screens<br /><br /><strong>✅ State Management in Flutter</strong> – setState, Provider, Riverpod, Bloc Pattern, Redux<br /><br /><strong>✅ Handling User Input</strong> – Forms, TextFields, Validation, Gesture Detection<br /><br /><strong>✅ Working with APIs</strong> – Fetching & Sending Data using HTTP & Dio<br /><br /><strong>✅ Database & Local Storage</strong> – SQLite, Hive, Shared Preferences, Firebase Firestore<br /><br /><strong>✅ Firebase Integration</strong> – Authentication, Firestore, Push Notifications, Cloud Functions<br /><br /><strong>✅ Animations & UI Effects</strong> – Implicit & Explicit Animations, Hero Animation, Lottie, Rive<br /><br /><strong>✅ Camera & File Handling</strong> – Image Picker, File Uploading, Permissions<br /><br /><strong>✅ Working with Maps & Location</strong> – Google Maps, Geolocation, GPS Tracking<br /><br /><strong>✅ Testing & Debugging</strong> – Unit Testing, Integration Testing, Debugging Best Practices<br /><br /><strong>✅ Deploying Flutter Apps</strong> – Generating APK/IPA, Play Store & App Store Publishing<br /><br /><br /><strong>💡 Bonus:</strong> Industry best practices, clean coding techniques, and interview tips!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in mobile app development<br />✔️ Developers looking to master Flutter & Dart<br />✔️ Anyone wanting to build cross-platform applications<br />✔️ Anyone aspiring to become a mobile app developer<br /><br /><strong>📅 Limited-Time Offer: ₹4999</strong><br /><strong>💻 Enroll Now & Start Building Stunning Mobile Apps! 🚀</strong><br /><br /><br /></p>,
      price: "₹4999",
      image: "/flutter.jpg",
    }
  ];

  const fcourses = [
    {
      id: 1,
      title: "HTML & CSS Free Cource For Begineer",
      description: <p><h2><strong>🚀 Complete HTML & CSS Crash Course (FREE) 🎉</strong></h2><br /><h3><strong>Master HTML & CSS to Build Stunning Websites!</strong></h3><br /><p>This <strong>HTML & CSS Crash Course</strong> is perfect for beginners and aspiring web developers who want to learn the fundamentals of web design and front-end development. With hands-on projects and real-world examples, you'll gain practical skills in no time – and the best part? It’s absolutely FREE! 🚀</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to Web Development</strong> – Basics of websites, browsers, and how the web works<br /><br /><strong>✅ Understanding HTML</strong> – Structure of an HTML document, elements, tags, attributes<br /><br /><strong>✅ Semantic HTML</strong> – Proper structuring with header, footer, article, section, and div<br /><br /><strong>✅ Forms & Inputs</strong> – Text fields, buttons, checkboxes, radio buttons, dropdowns, form validation<br /><br /><strong>✅ Tables & Lists</strong> – Creating tables, ordered & unordered lists, and nesting elements<br /><br /><strong>✅ Introduction to CSS</strong> – Inline, internal, and external CSS, selectors, properties<br /><br /><strong>✅ CSS Box Model</strong> – Margin, padding, border, width, height, display properties<br /><br /><strong>✅ CSS Flexbox & Grid</strong> – Creating responsive layouts, alignment, and positioning<br /><br /><strong>✅ Typography & Icons</strong> – Fonts, text styles, Google Fonts, and FontAwesome<br /><br /><strong>✅ CSS Colors & Gradients</strong> – Using hex, RGB, HSL, and background gradients<br /><br /><strong>✅ CSS Transitions & Animations</strong> – Adding smooth effects and keyframe animations<br /><br /><strong>✅ Responsive Web Design</strong> – Media queries, mobile-first design, breakpoints<br /><br /><strong>✅ Positioning & Z-Index</strong> – Absolute, relative, fixed, sticky positioning<br /><br /><strong>✅ CSS Variables & Custom Properties</strong> – Creating reusable styles and themes<br /><br /><strong>✅ Pseudo-Classes & Pseudo-Elements</strong> – Styling hover, focus, first-child, before, after<br /><br /><strong>✅ Working with Images & Backgrounds</strong> – Responsive images, object-fit, background-image properties<br /><br /><strong>✅ CSS Frameworks</strong> – Introduction to Bootstrap, Tailwind CSS, and Materialize<br /><br /><strong>✅ CSS Best Practices</strong> – Clean coding techniques, maintainable CSS structure<br /><br /><strong>✅ Deploying Web Projects</strong> – Hosting websites on GitHub Pages, Netlify, Vercel<br /><br /><br /><strong>💡 Bonus:</strong> Real-world project examples, web design tips, and interview guidance!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in web development<br />✔️ Anyone looking to master HTML & CSS for front-end design<br />✔️ Developers who want to build responsive, professional websites<br />✔️ Anyone aspiring to become a web designer or front-end developer<br /><br /><strong>💻 Enroll Now & Start Building Beautiful Websites – FOR FREE! 🚀</strong><br /><br /></p>,
      image: "/hc.jpg",
    },
    {
      id: 2,
      title: "C Language Free Cource For Begineer",
      description: <p><h2><strong>🚀 Complete C Language Crash Course (FREE) 🎉</strong></h2><br /><h3><strong>Master C Programming from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>C Language Crash Course</strong> is perfect for beginners and aspiring programmers who want to learn C from scratch and build a strong foundation in programming. With hands-on projects and real-world examples, you'll gain practical skills in no time – and the best part? It’s absolutely FREE! 🚀</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to C Programming</strong> – History, features, applications of C<br /><br /><strong>✅ Setting Up the Environment</strong> – Installing CodeBlocks, GCC Compiler, and running first C program<br /><br /><strong>✅ Understanding C Syntax</strong> – Structure of a C program, header files, main function<br /><br /><strong>✅ Variables & Data Types</strong> – int, float, char, double, and type conversions<br /><br /><strong>✅ Operators & Expressions</strong> – Arithmetic, relational, logical, bitwise operators<br /><br /><strong>✅ Control Flow Statements</strong> – if-else, switch case, loops (for, while, do-while)<br /><br /><strong>✅ Functions in C</strong> – User-defined functions, function prototypes, recursion<br /><br /><strong>✅ Arrays & Strings</strong> – Single & multidimensional arrays, string manipulation functions<br /><br /><strong>✅ Pointers in C</strong> – Pointer basics, pointer arithmetic, dynamic memory allocation<br /><br /><strong>✅ Structures & Unions</strong> – Defining structures, accessing members, differences between structures and unions<br /><br /><strong>✅ File Handling</strong> – Reading/writing files, file pointers, handling binary files<br /><br /><strong>✅ Preprocessor Directives</strong> – #define, #include, macros, conditional compilation<br /><br /><strong>✅ Memory Management</strong> – malloc, calloc, realloc, free<br /><br /><strong>✅ Error Handling & Debugging</strong> – Common runtime errors, debugging techniques<br /><br /><strong>✅ C Best Practices</strong> – Clean coding techniques, optimizing C programs<br /><br /><strong>✅ Real-World C Projects</strong> – Hands-on practice with mini-projects<br /><br /><br /><strong>💡 Bonus:</strong> Real-world project examples, competitive coding tips, and interview guidance!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming<br />✔️ Anyone looking to master C for system programming<br />✔️ Developers who want to build a strong coding foundation<br />✔️ Anyone aspiring to become a software developer<br /><br /><strong>💻 Enroll Now & Start Coding in C – FOR FREE! 🚀</strong><br /><br /><br /></p>,
      image: "/hc.jpg",
    },
    {
      id: 3,
      title: "C++ Language Free Cource For Begineer",
      description: <p><h2><strong>🚀 Complete C++ Language Crash Course (FREE) 🎉</strong></h2><br /><h3><strong>Master C++ Programming from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>C++ Language Crash Course</strong> is perfect for beginners and aspiring programmers who want to learn C++ from scratch and build a strong foundation in programming. With hands-on projects and real-world examples, you'll gain practical skills in no time – and the best part? It’s absolutely FREE! 🚀</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to C++</strong> – History, features, advantages over C<br /><br /><strong>✅ Setting Up the Environment</strong> – Installing CodeBlocks, GCC Compiler, and writing first C++ program<br /><br /><strong>✅ Understanding C++ Syntax</strong> – Structure of a C++ program, input/output operations (cin, cout)<br /><br /><strong>✅ Variables & Data Types</strong> – int, float, double, char, bool, type conversions<br /><br /><strong>✅ Operators & Expressions</strong> – Arithmetic, relational, logical, bitwise, increment/decrement operators<br /><br /><strong>✅ Control Flow Statements</strong> – if-else, switch case, loops (for, while, do-while)<br /><br /><strong>✅ Functions in C++</strong> – User-defined functions, function overloading, recursion<br /><br /><strong>✅ Arrays & Strings</strong> – Single & multidimensional arrays, string manipulation functions<br /><br /><strong>✅ Pointers & References</strong> – Pointer basics, pointer arithmetic, dynamic memory allocation<br /><br /><strong>✅ Object-Oriented Programming (OOP)</strong> – Classes, objects, constructors, destructors<br /><br /><strong>✅ Inheritance & Polymorphism</strong> – Types of inheritance, method overriding, virtual functions<br /><br /><strong>✅ Encapsulation & Abstraction</strong> – Data hiding, access specifiers (private, public, protected)<br /><br /><strong>✅ Operator Overloading</strong> – Overloading arithmetic, relational, assignment operators<br /><br /><strong>✅ Templates & STL</strong> – Function templates, class templates, Standard Template Library (STL)<br /><br /><strong>✅ Exception Handling</strong> – try-catch blocks, custom exceptions<br /><br /><strong>✅ File Handling in C++</strong> – Reading & writing files, file pointers, binary files<br /><br /><strong>✅ Memory Management</strong> – new, delete, smart pointers<br /><br /><strong>✅ Competitive Programming with C++</strong> – Time complexity, data structures, problem-solving<br /><br /><br /><strong>💡 Bonus:</strong> Real-world project examples, coding interview preparation, and best practices!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming<br />✔️ Anyone looking to master C++ for competitive programming<br />✔️ Developers who want to learn object-oriented programming<br />✔️ Anyone aspiring to become a software developer<br /><br /><strong>💻 Enroll Now & Start Coding in C++ – FOR FREE! 🚀</strong><br /><br /><br /></p>,
      image: "/cpp.jpg",
    },
    {
      id: 4,
      title: "JavaScript Free Cource For Begineer",
      description: <p><h2><strong>🚀 Complete JavaScript Crash Course (FREE) 🎉</strong></h2><br /><h3><strong>Master JavaScript from Beginner to Advanced Level!</strong></h3><br /><p>This <strong>JavaScript Crash Course</strong> is perfect for beginners and developers who want to learn JavaScript from scratch and build modern, interactive web applications. With hands-on projects and real-world examples, you'll gain practical skills in no time – and the best part? It’s absolutely FREE! 🚀</p><br /><h3>📌 What You’ll Learn:</h3><br /><strong>✅ Introduction to JavaScript</strong> – What is JavaScript? History, features, and importance in web development<br /><br /><strong>✅ Setting Up JavaScript Environment</strong> – Installing Node.js, using the browser console, writing first JS program<br /><br /><strong>✅ JavaScript Basics</strong> – Variables (var, let, const), data types, operators, and expressions<br /><br /><strong>✅ Control Flow & Loops</strong> – if-else, switch-case, for, while, do-while loops<br /><br /><strong>✅ Functions & Scope</strong> – Function declarations, arrow functions, closures, global & local scope<br /><br /><strong>✅ DOM Manipulation</strong> – Selecting elements, modifying HTML & CSS, event handling<br /><br /><strong>✅ JavaScript Events</strong> – Handling user interactions, event listeners, bubbling & delegation<br /><br /><strong>✅ ES6+ Features</strong> – Template literals, spread/rest operators, destructuring, async/await<br /><br /><strong>✅ Arrays & Objects</strong> – Array methods (map, filter, reduce), object properties & methods<br /><br /><strong>✅ Asynchronous JavaScript</strong> – Callbacks, Promises, async-await, AJAX & Fetch API<br /><br /><strong>✅ Error Handling & Debugging</strong> – Try-catch, throwing errors, debugging tools<br /><br /><strong>✅ Working with APIs</strong> – Fetching and displaying data from REST APIs<br /><br /><strong>✅ JavaScript Modules</strong> – Import/export, CommonJS, ES modules<br /><br /><strong>✅ Local Storage & Session Storage</strong> – Storing and retrieving data in the browser<br /><br /><strong>✅ Object-Oriented JavaScript</strong> – Prototypes, classes, inheritance, encapsulation<br /><br /><strong>✅ Functional Programming Concepts</strong> – Pure functions, higher-order functions, immutability<br /><br /><strong>✅ Event Loop & Execution Context</strong> – Call stack, microtasks, macrotasks, hoisting<br /><br /><strong>✅ JavaScript Frameworks Overview</strong> – Intro to React, Angular, Vue.js<br /><br /><strong>✅ Testing & Debugging JavaScript</strong> – Writing unit tests with Jest, debugging best practices<br /><br /><strong>✅ JavaScript Best Practices</strong> – Clean code, performance optimization, security tips<br /><br /><br /><strong>💡 Bonus:</strong> Real-world projects, coding interview questions, and industry best practices!<br /><br /><h3>🎯 Who Should Join?</h3><br />✔️ Beginners in programming<br />✔️ Web developers looking to master JavaScript<br />✔️ Frontend developers wanting to build interactive UIs<br />✔️ Anyone aspiring to become a full-stack developer<br /><br /><strong>💻 Enroll Now & Start Coding in JavaScript – FOR FREE! 🚀</strong><br /><br /><br /></p>,
      image: "/js.jpg",
    }
  ];
  
  return (
    <>
      <div className="dark:bg-slate-900 dark:text-white">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route
            path="/course-details/:id"
            element={authUser ? <CourseDetails courses={courses} /> : <Navigate to="/signup" />}
          />
          <Route
            path="/freecourse-details/:id"
            element={authUser ? <FreeCourceDetails fcourses={fcourses} /> : <Navigate to="/signup" />}
          />
          <Route
            path="/course"
            element={authUser ? <Courses /> : <Navigate to="/signup" />}
          />
          <Route
            path="/dashboard"
            element={authUser ? <Dashboard /> : <Navigate to="/signup" />}
          />
          <Route
            path="/about"
            element={authUser ? <About /> : <Navigate to="/signup" />}
          />
          <Route path="/signup" element={<Signup />} />
        </Routes>
        <Toaster />
      </div>
    </>
  );
}

export default App;
